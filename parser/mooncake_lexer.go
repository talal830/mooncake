// Code generated from /Users/talal/Development/antlr-lang/mooncake/grammar/Mooncake.g4 by ANTLR 4.7.2. DO NOT EDIT.

package parser

import (
	"fmt"
	"unicode"

	"github.com/antlr/antlr4/runtime/Go/antlr"
)
// Suppress unused import error
var _ = fmt.Printf
var _ = unicode.IsLetter


var serializedLexerAtn = []uint16{
	3, 24715, 42794, 33075, 47597, 16764, 15335, 30598, 22884, 2, 39, 298, 
	8, 1, 4, 2, 9, 2, 4, 3, 9, 3, 4, 4, 9, 4, 4, 5, 9, 5, 4, 6, 9, 6, 4, 7, 
	9, 7, 4, 8, 9, 8, 4, 9, 9, 9, 4, 10, 9, 10, 4, 11, 9, 11, 4, 12, 9, 12, 
	4, 13, 9, 13, 4, 14, 9, 14, 4, 15, 9, 15, 4, 16, 9, 16, 4, 17, 9, 17, 4, 
	18, 9, 18, 4, 19, 9, 19, 4, 20, 9, 20, 4, 21, 9, 21, 4, 22, 9, 22, 4, 23, 
	9, 23, 4, 24, 9, 24, 4, 25, 9, 25, 4, 26, 9, 26, 4, 27, 9, 27, 4, 28, 9, 
	28, 4, 29, 9, 29, 4, 30, 9, 30, 4, 31, 9, 31, 4, 32, 9, 32, 4, 33, 9, 33, 
	4, 34, 9, 34, 4, 35, 9, 35, 4, 36, 9, 36, 4, 37, 9, 37, 4, 38, 9, 38, 3, 
	2, 3, 2, 3, 3, 3, 3, 3, 4, 3, 4, 3, 5, 3, 5, 3, 5, 3, 6, 3, 6, 3, 6, 3, 
	6, 3, 7, 3, 7, 3, 7, 3, 8, 3, 8, 3, 9, 3, 9, 3, 10, 3, 10, 3, 10, 3, 11, 
	3, 11, 3, 11, 3, 11, 3, 11, 3, 12, 3, 12, 3, 12, 3, 12, 5, 12, 110, 10, 
	12, 3, 13, 3, 13, 3, 13, 3, 13, 5, 13, 116, 10, 13, 3, 14, 3, 14, 3, 14, 
	3, 14, 3, 14, 5, 14, 123, 10, 14, 3, 15, 3, 15, 3, 15, 3, 15, 5, 15, 129, 
	10, 15, 3, 16, 3, 16, 3, 16, 5, 16, 134, 10, 16, 3, 17, 3, 17, 3, 17, 5, 
	17, 139, 10, 17, 3, 18, 3, 18, 3, 18, 3, 18, 3, 18, 5, 18, 146, 10, 18, 
	3, 19, 3, 19, 3, 19, 3, 19, 3, 19, 5, 19, 153, 10, 19, 3, 20, 3, 20, 3, 
	20, 3, 20, 3, 20, 3, 21, 3, 21, 3, 21, 3, 21, 3, 21, 3, 21, 3, 21, 3, 22, 
	3, 22, 3, 22, 3, 22, 3, 22, 3, 22, 3, 22, 3, 22, 3, 22, 3, 22, 3, 22, 3, 
	22, 3, 22, 3, 22, 3, 23, 3, 23, 3, 23, 3, 23, 3, 23, 3, 23, 3, 23, 3, 23, 
	3, 23, 3, 23, 3, 23, 3, 23, 3, 23, 3, 23, 3, 23, 3, 23, 3, 23, 3, 23, 3, 
	24, 3, 24, 3, 24, 3, 24, 3, 24, 3, 24, 3, 24, 3, 25, 3, 25, 3, 25, 3, 25, 
	3, 25, 3, 25, 3, 26, 5, 26, 213, 10, 26, 3, 26, 3, 26, 3, 26, 6, 26, 218, 
	10, 26, 13, 26, 14, 26, 219, 3, 27, 3, 27, 7, 27, 224, 10, 27, 12, 27, 
	14, 27, 227, 11, 27, 3, 28, 3, 28, 5, 28, 231, 10, 28, 3, 29, 3, 29, 3, 
	29, 3, 29, 3, 29, 3, 30, 3, 30, 3, 30, 3, 30, 3, 30, 3, 30, 3, 31, 3, 31, 
	3, 31, 3, 31, 3, 32, 3, 32, 3, 32, 3, 33, 3, 33, 7, 33, 253, 10, 33, 12, 
	33, 14, 33, 256, 11, 33, 3, 33, 3, 33, 3, 34, 6, 34, 261, 10, 34, 13, 34, 
	14, 34, 262, 3, 34, 3, 34, 3, 35, 6, 35, 268, 10, 35, 13, 35, 14, 35, 269, 
	3, 35, 3, 35, 3, 36, 3, 36, 3, 36, 3, 36, 3, 36, 6, 36, 279, 10, 36, 13, 
	36, 14, 36, 280, 3, 36, 3, 36, 5, 36, 285, 10, 36, 3, 37, 3, 37, 3, 37, 
	3, 37, 3, 37, 3, 37, 3, 38, 3, 38, 6, 38, 295, 10, 38, 13, 38, 14, 38, 
	296, 3, 219, 2, 39, 3, 3, 5, 4, 7, 5, 9, 6, 11, 7, 13, 8, 15, 9, 17, 10, 
	19, 11, 21, 12, 23, 13, 25, 14, 27, 15, 29, 16, 31, 17, 33, 18, 35, 19, 
	37, 20, 39, 21, 41, 22, 43, 23, 45, 24, 47, 25, 49, 26, 51, 27, 53, 28, 
	55, 29, 57, 30, 59, 31, 61, 32, 63, 33, 65, 34, 67, 35, 69, 36, 71, 37, 
	73, 38, 75, 39, 3, 2, 6, 3, 2, 50, 59, 4, 2, 12, 12, 15, 15, 4, 2, 11, 
	11, 34, 34, 4, 2, 67, 92, 99, 124, 2, 316, 2, 3, 3, 2, 2, 2, 2, 5, 3, 2, 
	2, 2, 2, 7, 3, 2, 2, 2, 2, 9, 3, 2, 2, 2, 2, 11, 3, 2, 2, 2, 2, 13, 3, 
	2, 2, 2, 2, 15, 3, 2, 2, 2, 2, 17, 3, 2, 2, 2, 2, 19, 3, 2, 2, 2, 2, 21, 
	3, 2, 2, 2, 2, 23, 3, 2, 2, 2, 2, 25, 3, 2, 2, 2, 2, 27, 3, 2, 2, 2, 2, 
	29, 3, 2, 2, 2, 2, 31, 3, 2, 2, 2, 2, 33, 3, 2, 2, 2, 2, 35, 3, 2, 2, 2, 
	2, 37, 3, 2, 2, 2, 2, 39, 3, 2, 2, 2, 2, 41, 3, 2, 2, 2, 2, 43, 3, 2, 2, 
	2, 2, 45, 3, 2, 2, 2, 2, 47, 3, 2, 2, 2, 2, 49, 3, 2, 2, 2, 2, 51, 3, 2, 
	2, 2, 2, 53, 3, 2, 2, 2, 2, 55, 3, 2, 2, 2, 2, 57, 3, 2, 2, 2, 2, 59, 3, 
	2, 2, 2, 2, 61, 3, 2, 2, 2, 2, 63, 3, 2, 2, 2, 2, 65, 3, 2, 2, 2, 2, 67, 
	3, 2, 2, 2, 2, 69, 3, 2, 2, 2, 2, 71, 3, 2, 2, 2, 2, 73, 3, 2, 2, 2, 2, 
	75, 3, 2, 2, 2, 3, 77, 3, 2, 2, 2, 5, 79, 3, 2, 2, 2, 7, 81, 3, 2, 2, 2, 
	9, 83, 3, 2, 2, 2, 11, 86, 3, 2, 2, 2, 13, 90, 3, 2, 2, 2, 15, 93, 3, 2, 
	2, 2, 17, 95, 3, 2, 2, 2, 19, 97, 3, 2, 2, 2, 21, 100, 3, 2, 2, 2, 23, 
	109, 3, 2, 2, 2, 25, 115, 3, 2, 2, 2, 27, 122, 3, 2, 2, 2, 29, 128, 3, 
	2, 2, 2, 31, 133, 3, 2, 2, 2, 33, 138, 3, 2, 2, 2, 35, 145, 3, 2, 2, 2, 
	37, 152, 3, 2, 2, 2, 39, 154, 3, 2, 2, 2, 41, 159, 3, 2, 2, 2, 43, 166, 
	3, 2, 2, 2, 45, 180, 3, 2, 2, 2, 47, 198, 3, 2, 2, 2, 49, 205, 3, 2, 2, 
	2, 51, 212, 3, 2, 2, 2, 53, 221, 3, 2, 2, 2, 55, 230, 3, 2, 2, 2, 57, 232, 
	3, 2, 2, 2, 59, 237, 3, 2, 2, 2, 61, 243, 3, 2, 2, 2, 63, 247, 3, 2, 2, 
	2, 65, 250, 3, 2, 2, 2, 67, 260, 3, 2, 2, 2, 69, 267, 3, 2, 2, 2, 71, 278, 
	3, 2, 2, 2, 73, 286, 3, 2, 2, 2, 75, 292, 3, 2, 2, 2, 77, 78, 7, 125, 2, 
	2, 78, 4, 3, 2, 2, 2, 79, 80, 7, 127, 2, 2, 80, 6, 3, 2, 2, 2, 81, 82, 
	7, 60, 2, 2, 82, 8, 3, 2, 2, 2, 83, 84, 7, 63, 2, 2, 84, 85, 7, 64, 2, 
	2, 85, 10, 3, 2, 2, 2, 86, 87, 7, 35, 2, 2, 87, 88, 7, 35, 2, 2, 88, 89, 
	7, 35, 2, 2, 89, 12, 3, 2, 2, 2, 90, 91, 7, 35, 2, 2, 91, 92, 7, 35, 2, 
	2, 92, 14, 3, 2, 2, 2, 93, 94, 7, 35, 2, 2, 94, 16, 3, 2, 2, 2, 95, 96, 
	7, 128, 2, 2, 96, 18, 3, 2, 2, 2, 97, 98, 7, 107, 2, 2, 98, 99, 7, 104, 
	2, 2, 99, 20, 3, 2, 2, 2, 100, 101, 7, 103, 2, 2, 101, 102, 7, 110, 2, 
	2, 102, 103, 7, 107, 2, 2, 103, 104, 7, 104, 2, 2, 104, 22, 3, 2, 2, 2, 
	105, 106, 7, 103, 2, 2, 106, 110, 7, 115, 2, 2, 107, 108, 7, 63, 2, 2, 
	108, 110, 7, 63, 2, 2, 109, 105, 3, 2, 2, 2, 109, 107, 3, 2, 2, 2, 110, 
	24, 3, 2, 2, 2, 111, 112, 7, 112, 2, 2, 112, 116, 7, 103, 2, 2, 113, 114, 
	7, 35, 2, 2, 114, 116, 7, 63, 2, 2, 115, 111, 3, 2, 2, 2, 115, 113, 3, 
	2, 2, 2, 116, 26, 3, 2, 2, 2, 117, 118, 7, 99, 2, 2, 118, 119, 7, 112, 
	2, 2, 119, 123, 7, 102, 2, 2, 120, 121, 7, 40, 2, 2, 121, 123, 7, 40, 2, 
	2, 122, 117, 3, 2, 2, 2, 122, 120, 3, 2, 2, 2, 123, 28, 3, 2, 2, 2, 124, 
	125, 7, 113, 2, 2, 125, 129, 7, 116, 2, 2, 126, 127, 7, 126, 2, 2, 127, 
	129, 7, 126, 2, 2, 128, 124, 3, 2, 2, 2, 128, 126, 3, 2, 2, 2, 129, 30, 
	3, 2, 2, 2, 130, 131, 7, 105, 2, 2, 131, 134, 7, 118, 2, 2, 132, 134, 7, 
	64, 2, 2, 133, 130, 3, 2, 2, 2, 133, 132, 3, 2, 2, 2, 134, 32, 3, 2, 2, 
	2, 135, 136, 7, 110, 2, 2, 136, 139, 7, 118, 2, 2, 137, 139, 7, 62, 2, 
	2, 138, 135, 3, 2, 2, 2, 138, 137, 3, 2, 2, 2, 139, 34, 3, 2, 2, 2, 140, 
	141, 7, 105, 2, 2, 141, 142, 7, 118, 2, 2, 142, 146, 7, 103, 2, 2, 143, 
	144, 7, 64, 2, 2, 144, 146, 7, 63, 2, 2, 145, 140, 3, 2, 2, 2, 145, 143, 
	3, 2, 2, 2, 146, 36, 3, 2, 2, 2, 147, 148, 7, 110, 2, 2, 148, 149, 7, 118, 
	2, 2, 149, 153, 7, 103, 2, 2, 150, 151, 7, 62, 2, 2, 151, 153, 7, 63, 2, 
	2, 152, 147, 3, 2, 2, 2, 152, 150, 3, 2, 2, 2, 153, 38, 3, 2, 2, 2, 154, 
	155, 7, 66, 2, 2, 155, 156, 7, 110, 2, 2, 156, 157, 7, 103, 2, 2, 157, 
	158, 7, 112, 2, 2, 158, 40, 3, 2, 2, 2, 159, 160, 7, 66, 2, 2, 160, 161, 
	7, 104, 2, 2, 161, 162, 7, 110, 2, 2, 162, 163, 7, 113, 2, 2, 163, 164, 
	7, 99, 2, 2, 164, 165, 7, 118, 2, 2, 165, 42, 3, 2, 2, 2, 166, 167, 7, 
	66, 2, 2, 167, 168, 7, 102, 2, 2, 168, 169, 7, 99, 2, 2, 169, 170, 7, 118, 
	2, 2, 170, 171, 7, 103, 2, 2, 171, 172, 7, 86, 2, 2, 172, 173, 7, 107, 
	2, 2, 173, 174, 7, 111, 2, 2, 174, 175, 7, 103, 2, 2, 175, 176, 7, 78, 
	2, 2, 176, 177, 7, 113, 2, 2, 177, 178, 7, 112, 2, 2, 178, 179, 7, 105, 
	2, 2, 179, 44, 3, 2, 2, 2, 180, 181, 7, 66, 2, 2, 181, 182, 7, 99, 2, 2, 
	182, 183, 7, 104, 2, 2, 183, 184, 7, 118, 2, 2, 184, 185, 7, 103, 2, 2, 
	185, 186, 7, 116, 2, 2, 186, 187, 7, 69, 2, 2, 187, 188, 7, 119, 2, 2, 
	188, 189, 7, 116, 2, 2, 189, 190, 7, 116, 2, 2, 190, 191, 7, 103, 2, 2, 
	191, 192, 7, 112, 2, 2, 192, 193, 7, 118, 2, 2, 193, 194, 7, 86, 2, 2, 
	194, 195, 7, 107, 2, 2, 195, 196, 7, 111, 2, 2, 196, 197, 7, 103, 2, 2, 
	197, 46, 3, 2, 2, 2, 198, 199, 7, 103, 2, 2, 199, 200, 7, 122, 2, 2, 200, 
	201, 7, 107, 2, 2, 201, 202, 7, 117, 2, 2, 202, 203, 7, 118, 2, 2, 203, 
	204, 7, 117, 2, 2, 204, 48, 3, 2, 2, 2, 205, 206, 7, 103, 2, 2, 206, 207, 
	7, 111, 2, 2, 207, 208, 7, 114, 2, 2, 208, 209, 7, 118, 2, 2, 209, 210, 
	7, 123, 2, 2, 210, 50, 3, 2, 2, 2, 211, 213, 7, 47, 2, 2, 212, 211, 3, 
	2, 2, 2, 212, 213, 3, 2, 2, 2, 213, 214, 3, 2, 2, 2, 214, 215, 5, 53, 27, 
	2, 215, 217, 7, 48, 2, 2, 216, 218, 9, 2, 2, 2, 217, 216, 3, 2, 2, 2, 218, 
	219, 3, 2, 2, 2, 219, 220, 3, 2, 2, 2, 219, 217, 3, 2, 2, 2, 220, 52, 3, 
	2, 2, 2, 221, 225, 9, 2, 2, 2, 222, 224, 9, 2, 2, 2, 223, 222, 3, 2, 2, 
	2, 224, 227, 3, 2, 2, 2, 225, 223, 3, 2, 2, 2, 225, 226, 3, 2, 2, 2, 226, 
	54, 3, 2, 2, 2, 227, 225, 3, 2, 2, 2, 228, 231, 5, 57, 29, 2, 229, 231, 
	5, 59, 30, 2, 230, 228, 3, 2, 2, 2, 230, 229, 3, 2, 2, 2, 231, 56, 3, 2, 
	2, 2, 232, 233, 7, 118, 2, 2, 233, 234, 7, 116, 2, 2, 234, 235, 7, 119, 
	2, 2, 235, 236, 7, 103, 2, 2, 236, 58, 3, 2, 2, 2, 237, 238, 7, 104, 2, 
	2, 238, 239, 7, 99, 2, 2, 239, 240, 7, 110, 2, 2, 240, 241, 7, 117, 2, 
	2, 241, 242, 7, 103, 2, 2, 242, 60, 3, 2, 2, 2, 243, 244, 7, 112, 2, 2, 
	244, 245, 7, 107, 2, 2, 245, 246, 7, 110, 2, 2, 246, 62, 3, 2, 2, 2, 247, 
	248, 7, 71, 2, 2, 248, 249, 5, 53, 27, 2, 249, 64, 3, 2, 2, 2, 250, 254, 
	7, 37, 2, 2, 251, 253, 10, 3, 2, 2, 252, 251, 3, 2, 2, 2, 253, 256, 3, 
	2, 2, 2, 254, 252, 3, 2, 2, 2, 254, 255, 3, 2, 2, 2, 255, 257, 3, 2, 2, 
	2, 256, 254, 3, 2, 2, 2, 257, 258, 8, 33, 2, 2, 258, 66, 3, 2, 2, 2, 259, 
	261, 9, 4, 2, 2, 260, 259, 3, 2, 2, 2, 261, 262, 3, 2, 2, 2, 262, 260, 
	3, 2, 2, 2, 262, 263, 3, 2, 2, 2, 263, 264, 3, 2, 2, 2, 264, 265, 8, 34, 
	3, 2, 265, 68, 3, 2, 2, 2, 266, 268, 9, 3, 2, 2, 267, 266, 3, 2, 2, 2, 
	268, 269, 3, 2, 2, 2, 269, 267, 3, 2, 2, 2, 269, 270, 3, 2, 2, 2, 270, 
	271, 3, 2, 2, 2, 271, 272, 8, 35, 3, 2, 272, 70, 3, 2, 2, 2, 273, 279, 
	9, 5, 2, 2, 274, 275, 7, 93, 2, 2, 275, 276, 5, 53, 27, 2, 276, 277, 7, 
	95, 2, 2, 277, 279, 3, 2, 2, 2, 278, 273, 3, 2, 2, 2, 278, 274, 3, 2, 2, 
	2, 279, 280, 3, 2, 2, 2, 280, 278, 3, 2, 2, 2, 280, 281, 3, 2, 2, 2, 281, 
	284, 3, 2, 2, 2, 282, 283, 7, 48, 2, 2, 283, 285, 5, 71, 36, 2, 284, 282, 
	3, 2, 2, 2, 284, 285, 3, 2, 2, 2, 285, 72, 3, 2, 2, 2, 286, 287, 7, 38, 
	2, 2, 287, 288, 7, 125, 2, 2, 288, 289, 3, 2, 2, 2, 289, 290, 5, 71, 36, 
	2, 290, 291, 7, 127, 2, 2, 291, 74, 3, 2, 2, 2, 292, 294, 7, 97, 2, 2, 
	293, 295, 9, 5, 2, 2, 294, 293, 3, 2, 2, 2, 295, 296, 3, 2, 2, 2, 296, 
	294, 3, 2, 2, 2, 296, 297, 3, 2, 2, 2, 297, 76, 3, 2, 2, 2, 22, 2, 109, 
	115, 122, 128, 133, 138, 145, 152, 212, 219, 225, 230, 254, 262, 269, 278, 
	280, 284, 296, 4, 8, 2, 2, 2, 3, 2,
}

var lexerDeserializer = antlr.NewATNDeserializer(nil)
var lexerAtn = lexerDeserializer.DeserializeFromUInt16(serializedLexerAtn)

var lexerChannelNames = []string{
	"DEFAULT_TOKEN_CHANNEL", "HIDDEN",
}

var lexerModeNames = []string{
	"DEFAULT_MODE",
}

var lexerLiteralNames = []string{
	"", "'{'", "'}'", "':'", "'=>'", "'!!!'", "'!!'", "'!'", "'~'", "'if'", 
	"'elif'", "", "", "", "", "", "", "", "", "'@len'", "'@float'", "'@dateTimeLong'", 
	"'@afterCurrentTime'", "'exists'", "'empty'", "", "", "", "'true'", "'false'", 
	"'nil'",
}

var lexerSymbolicNames = []string{
	"", "", "", "", "", "FATAL", "SEVERE", "WARNING", "LINKED", "IF", "ELIF", 
	"EQ", "NE", "AND", "OR", "GT", "LT", "GTE", "LTE", "LEN_FUNC", "FLOAT_FUNC", 
	"DATETIME_LONG", "AFTER_CURR_TIME", "EXISTS", "EMPTY", "DOUBLE", "INT", 
	"BOOL", "TRUE", "FALSE", "NULL", "ERROR_CODE", "COMMENT", "WS", "TERMINATOR", 
	"IDENTIFIER", "CTX_ID", "INLINE_ID",
}

var lexerRuleNames = []string{
	"T__0", "T__1", "T__2", "T__3", "FATAL", "SEVERE", "WARNING", "LINKED", 
	"IF", "ELIF", "EQ", "NE", "AND", "OR", "GT", "LT", "GTE", "LTE", "LEN_FUNC", 
	"FLOAT_FUNC", "DATETIME_LONG", "AFTER_CURR_TIME", "EXISTS", "EMPTY", "DOUBLE", 
	"INT", "BOOL", "TRUE", "FALSE", "NULL", "ERROR_CODE", "COMMENT", "WS", 
	"TERMINATOR", "IDENTIFIER", "CTX_ID", "INLINE_ID",
}

type MooncakeLexer struct {
	*antlr.BaseLexer
	channelNames []string
	modeNames []string
	// TODO: EOF string
}

var lexerDecisionToDFA = make([]*antlr.DFA, len(lexerAtn.DecisionToState))

func init() {
	for index, ds := range lexerAtn.DecisionToState {
		lexerDecisionToDFA[index] = antlr.NewDFA(ds, index)
	}
}

func NewMooncakeLexer(input antlr.CharStream) *MooncakeLexer {

	l := new(MooncakeLexer)

	l.BaseLexer = antlr.NewBaseLexer(input)
	l.Interpreter = antlr.NewLexerATNSimulator(l, lexerAtn, lexerDecisionToDFA, antlr.NewPredictionContextCache())

	l.channelNames = lexerChannelNames
	l.modeNames = lexerModeNames
	l.RuleNames = lexerRuleNames
	l.LiteralNames = lexerLiteralNames
	l.SymbolicNames = lexerSymbolicNames
	l.GrammarFileName = "Mooncake.g4"
	// TODO: l.EOF = antlr.TokenEOF

	return l
}

// MooncakeLexer tokens.
const (
	MooncakeLexerT__0 = 1
	MooncakeLexerT__1 = 2
	MooncakeLexerT__2 = 3
	MooncakeLexerT__3 = 4
	MooncakeLexerFATAL = 5
	MooncakeLexerSEVERE = 6
	MooncakeLexerWARNING = 7
	MooncakeLexerLINKED = 8
	MooncakeLexerIF = 9
	MooncakeLexerELIF = 10
	MooncakeLexerEQ = 11
	MooncakeLexerNE = 12
	MooncakeLexerAND = 13
	MooncakeLexerOR = 14
	MooncakeLexerGT = 15
	MooncakeLexerLT = 16
	MooncakeLexerGTE = 17
	MooncakeLexerLTE = 18
	MooncakeLexerLEN_FUNC = 19
	MooncakeLexerFLOAT_FUNC = 20
	MooncakeLexerDATETIME_LONG = 21
	MooncakeLexerAFTER_CURR_TIME = 22
	MooncakeLexerEXISTS = 23
	MooncakeLexerEMPTY = 24
	MooncakeLexerDOUBLE = 25
	MooncakeLexerINT = 26
	MooncakeLexerBOOL = 27
	MooncakeLexerTRUE = 28
	MooncakeLexerFALSE = 29
	MooncakeLexerNULL = 30
	MooncakeLexerERROR_CODE = 31
	MooncakeLexerCOMMENT = 32
	MooncakeLexerWS = 33
	MooncakeLexerTERMINATOR = 34
	MooncakeLexerIDENTIFIER = 35
	MooncakeLexerCTX_ID = 36
	MooncakeLexerINLINE_ID = 37
)

